import { z } from "zod";
export declare const PortfolioSnapshot: z.ZodObject<{
    id: z.ZodString;
    portfolio_id: z.ZodString;
    as_of: z.ZodString;
    total_value: z.ZodNumber;
    cash: z.ZodNumber;
    equity_value: z.ZodNumber;
    gross_exposure: z.ZodNumber;
    net_exposure: z.ZodNumber;
    long_exposure: z.ZodNumber;
    short_exposure: z.ZodNumber;
    gross_exposure_pct: z.ZodNumber;
    net_exposure_pct: z.ZodNumber;
    long_exposure_pct: z.ZodNumber;
    short_exposure_pct: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    id: string;
    portfolio_id: string;
    as_of: string;
    total_value: number;
    cash: number;
    equity_value: number;
    gross_exposure: number;
    net_exposure: number;
    long_exposure: number;
    short_exposure: number;
    gross_exposure_pct: number;
    net_exposure_pct: number;
    long_exposure_pct: number;
    short_exposure_pct: number;
}, {
    id: string;
    portfolio_id: string;
    as_of: string;
    total_value: number;
    cash: number;
    equity_value: number;
    gross_exposure: number;
    net_exposure: number;
    long_exposure: number;
    short_exposure: number;
    gross_exposure_pct: number;
    net_exposure_pct: number;
    long_exposure_pct: number;
    short_exposure_pct: number;
}>;
export declare const Position: z.ZodObject<{
    id: z.ZodString;
    portfolio_id: z.ZodString;
    symbol: z.ZodString;
    side: z.ZodEnum<["LONG", "SHORT"]>;
    quantity: z.ZodNumber;
    avg_cost: z.ZodNumber;
    market_price: z.ZodNumber;
    market_value: z.ZodNumber;
    unrealized_pnl: z.ZodNumber;
    unrealized_pnl_pct: z.ZodNumber;
    sector: z.ZodNullable<z.ZodString>;
    industry: z.ZodNullable<z.ZodString>;
    as_of: z.ZodString;
}, "strip", z.ZodTypeAny, {
    symbol: string;
    id: string;
    portfolio_id: string;
    as_of: string;
    side: "LONG" | "SHORT";
    quantity: number;
    avg_cost: number;
    market_price: number;
    market_value: number;
    unrealized_pnl: number;
    unrealized_pnl_pct: number;
    sector: string | null;
    industry: string | null;
}, {
    symbol: string;
    id: string;
    portfolio_id: string;
    as_of: string;
    side: "LONG" | "SHORT";
    quantity: number;
    avg_cost: number;
    market_price: number;
    market_value: number;
    unrealized_pnl: number;
    unrealized_pnl_pct: number;
    sector: string | null;
    industry: string | null;
}>;
export declare const PositionFactorExposure: z.ZodObject<{
    id: z.ZodString;
    position_id: z.ZodString;
    factor_id: z.ZodString;
    factor_name: z.ZodString;
    beta: z.ZodNumber;
    as_of: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    as_of: string;
    position_id: string;
    factor_id: string;
    factor_name: string;
    beta: number;
}, {
    id: string;
    as_of: string;
    position_id: string;
    factor_id: string;
    factor_name: string;
    beta: number;
}>;
export declare const RiskMetrics: z.ZodObject<{
    portfolio_id: z.ZodString;
    as_of: z.ZodString;
    var_1d_95: z.ZodNullable<z.ZodNumber>;
    var_1d_99: z.ZodNullable<z.ZodNumber>;
    var_10d_95: z.ZodNullable<z.ZodNumber>;
    var_10d_99: z.ZodNullable<z.ZodNumber>;
    es_1d_95: z.ZodNullable<z.ZodNumber>;
    es_1d_99: z.ZodNullable<z.ZodNumber>;
    es_10d_95: z.ZodNullable<z.ZodNumber>;
    es_10d_99: z.ZodNullable<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    portfolio_id: string;
    as_of: string;
    var_1d_95: number | null;
    var_1d_99: number | null;
    var_10d_95: number | null;
    var_10d_99: number | null;
    es_1d_95: number | null;
    es_1d_99: number | null;
    es_10d_95: number | null;
    es_10d_99: number | null;
}, {
    portfolio_id: string;
    as_of: string;
    var_1d_95: number | null;
    var_1d_99: number | null;
    var_10d_95: number | null;
    var_10d_99: number | null;
    es_1d_95: number | null;
    es_1d_99: number | null;
    es_10d_95: number | null;
    es_10d_99: number | null;
}>;
export declare const StressTestResult: z.ZodObject<{
    scenario_name: z.ZodString;
    portfolio_id: z.ZodString;
    pnl_amount: z.ZodNumber;
    pnl_pct: z.ZodNumber;
    as_of: z.ZodString;
}, "strip", z.ZodTypeAny, {
    portfolio_id: string;
    as_of: string;
    scenario_name: string;
    pnl_amount: number;
    pnl_pct: number;
}, {
    portfolio_id: string;
    as_of: string;
    scenario_name: string;
    pnl_amount: number;
    pnl_pct: number;
}>;
export type TPortfolioSnapshot = z.infer<typeof PortfolioSnapshot>;
export type TPosition = z.infer<typeof Position>;
export type TPositionFactorExposure = z.infer<typeof PositionFactorExposure>;
export type TRiskMetrics = z.infer<typeof RiskMetrics>;
export type TStressTestResult = z.infer<typeof StressTestResult>;
export declare class BackendClient {
    private baseUrl;
    private authToken?;
    constructor(baseUrl?: string, authToken?: string);
    private request;
    getPortfolioSnapshot(portfolioId: string, asOf?: string): Promise<TPortfolioSnapshot | null>;
    getPortfolioReport(portfolioId: string, format?: "json" | "csv" | "md"): Promise<any>;
    getPositions(portfolioId: string, asOf?: string): Promise<TPosition[]>;
    getFactorExposures(portfolioId: string, asOf?: string): Promise<TPositionFactorExposure[]>;
    getRiskMetrics(portfolioId: string, asOf?: string): Promise<TRiskMetrics | null>;
    runStressTest(portfolioId: string, scenarios: string[]): Promise<TStressTestResult[]>;
    healthCheck(): Promise<boolean>;
}
